void solve(vector<int>&candidates,int target,vector<int>&v,int begin,vector<vector<int>>&ans){
         if(target==0){
       ans.push_back(v);
         return;}
        if(begin>=candidates.size())return;
        for(int i=begin;i<candidates.size();i++){
             if(candidates[i]<=target){
                 if(i==begin||candidates[i]!=candidates[i-1]){
               v.push_back(candidates[i]);
                     solve(candidates,target-candidates[i],v,i+1,ans);
                     v.pop_back();
                 }
}
        else break;
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        
        sort(candidates.begin(),candidates.end());
        vector<int>v;
        vector<vector<int>>ans;
        solve(candidates,target,v,0,ans);
        return ans;
    }
